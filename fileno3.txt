class Student:
    def __init__(self,name,Class, percentage):
        self.__name=name
        self.__Class=Class
        self.__percentage=percentage 
    def show(self):
        print("name:",self.__name,"Class:",self.__Class)
    def get_percentage(self):
        return self.__percentage

class science_stream_eligibility(Student):
    def __init__(self,name,Class, percentage,maths_type,maths_marks):
          super().__init__(name,Class,percentage)
          self.__mathsty=maths_type
          self.__mathsmar=maths_marks
        
    def check_eligibility(self):
        if self.__mathsty == "Standard" and self.__mathsmar>= 75:
            return True
        else:
            return False
            
    def show(self):
        super().show()
        print(f"Maths Type: {self.__mathsty}, Maths Marks: {self.__mathsmar}")
        
def main():
    stu=[]
    n=int(input("enter number of students in 10th class:"))
    for i in range(n):
        stu_name=input("name: ")
        stu_class=input("class: ")
        stu_percentage=eval(input("percentage: "))
        maths_type=input("Standard maths or basic maths:").strip()
        maths_marks=int(input("enter marks in mathematics: "))
        
        stu_obj=science_stream_eligibility(stu_name,stu_class,stu_percentage,maths_type,maths_marks)
        stu.append(stu_obj)
    return stu
    
def topper(stu):
     if not stu: 
         print("Result to be loaded!")
         return
         
     curr_topper = stu[0]
     max_perc = curr_topper.get_percentage()
     
     for obj in stu:
        curr_perc = obj.get_percentage()
        if curr_perc > max_perc:
            max_perc = curr_perc
            curr_topper = obj
            
     print("\n=== SCHOOL TOPPER REPORT ===")
     curr_topper.show() 
     print(f"Securing the highest percentage of {max_perc}%!") 

def rank(stu):
    rank_stu=sorted(stu,key=lambda student:student.get_percentage(),reverse=True)
    for i,obj in enumerate(rank_stu):
        Rank=i+1
        print(f"Rank{Rank}: ",end="")
        obj.show()
        print(f"Percentage:{obj.get_percentage()}%")

def display_eligibility(stu):
    print("\n=== SCIENCE STREAM ELIGIBILITY REPORT ===")
    for stu_obj in stu:
        if isinstance(stu_obj, science_stream_eligibility):
            
            if stu_obj.check_eligibility(): 
                print(f"{stu_obj._Student__name} is **ELIGIBLE** for Science Stream.")
            else:
                print(f"{stu_obj._Student__name} is **NOT ELIGIBLE** for Science Stream.")


if __name__=="__main__":
    stu=main()
    topper(stu)
    rank(stu)
    display_eligibility(stu)